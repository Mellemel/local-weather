{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","document","ready","ipLocOptions","url","format","ip","myip","getJSON","info","city","state","test","split","w","query","encodeURI","setting","weatherURL","then","intel","data","results","channel","location","currentCondition","item","condition","forecast","html","region","date","temp","text","index","day","high","low"],"mappings":"cAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAAK,EAAAC,UAAAC,MAAA,WACA,GAAAC,IACAC,IAAA,yBACAC,OAAA,QACAC,GAAAC,KAIAP,GAAAQ,QAAAL,EAAAC,IAAAD,EAAAE,OAAAF,EAAAG,GAAA,SAAAG,GACA,GAAAC,GAAAD,EAAA,KAAAE,EAAAF,EAAA,WAEA,SAAAG,KAAAF,KACAA,EAAAA,EAAAG,MAAA,KAAA,GAIA,IAAAC,IACAV,IAAA,+CACAW,MAAAC,UAAA,8FAAAN,EAAA,KAAAC,EAAA,MACAM,QAAA,qEAGAC,EAAAJ,EAAAV,IAAAU,EAAAC,MAAAD,EAAAG,OACAjB,GAAAQ,QAAAU,GAAAC,KAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAL,MAAAO,QAAAC,QACAC,EAAAH,EAAAG,SACAC,EAAAJ,EAAAK,KAAAC,UACAC,EAAAP,EAAAK,KAAAE,QAEA5B,GAAA,UAAA6B,KACA,OAAAL,EAAAd,KAAA,KAAAc,EAAAM,OAAA,YACAL,EAAAM,KAAA,YACAN,EAAAO,KAAA,+BACAP,EAAAQ,KAAA,SAGAjC,EAAA,QAAA6B,KAAA,SAAAK,GACA,MAAA,OAAAN,EAAAM,GAAAC,IAAA,YACAP,EAAAM,GAAAH,KAAA,YACAH,EAAAM,GAAAE,KAAA,+BACAR,EAAAM,GAAAG,IAAA,+BACAT,EAAAM,GAAAD,KAAA,0BAlBA","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$(document).ready(() => {\n  let ipLocOptions = {\n    url: 'https://freegeoip.net/',\n    format: 'json/',\n    ip: myip\n  }\n\n  // get location of ip address\n  $.getJSON(ipLocOptions.url + ipLocOptions.format + ipLocOptions.ip, (info) => {\n    let city = info['city'], state = info['region_code']\n\n    if (/the/gi.test(city)) {\n      city = city.split(' ')[1]\n    }\n\n    // get weather info from yahooapis\n    let w = {\n      url: 'https://query.yahooapis.com/v1/public/yql?q=',\n      query: encodeURI('select * from weather.forecast where woeid in (select woeid from geo.places(1) where text=\"' + city + ', ' + state + '\")'),\n      setting: '&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys'\n    }\n\n    let weatherURL = w.url + w.query + w.setting\n    $.getJSON(weatherURL).then((intel) => {\n      var data = intel.query.results.channel,\n        location = data.location,\n        currentCondition = data.item.condition,\n        forecast = data.item.forecast\n\n      $('#today').html(\n        '<h3>' + location.city + ', ' + location.region + '</h3>' +\n        '<h3>' + currentCondition.date + '</h3>' +\n        '<h3>' + currentCondition.temp + '<span>&deg;F</span></h3>' +\n        '<h3>' + currentCondition.text + '</h3>'\n      )\n\n      $('.day').html((index) => {\n        return '<td>' + forecast[index].day + '</td>' +\n          '<td>' + forecast[index].date + '</td>' +\n          '<td>' + forecast[index].high + '<span>&deg;F</span></td>' + \n          '<td>' + forecast[index].low + '<span>&deg;F</span></td>' +\n          '<td>' + forecast[index].text + '</td>'\n      })\n    })\n  })\n  function formatDate(Date){\n    \n  }\n})"],"sourceRoot":"/source/"}