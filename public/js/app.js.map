{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/moment/moment.js","src/js/weather.js","src/js/app.js","app.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","global","factory","_typeof","define","amd","moment","this","hooks","hookCallback","apply","arguments","isArray","input","Array","Object","prototype","toString","isObject","isObjectEmpty","obj","k","isUndefined","isNumber","isDate","Date","map","arr","fn","res","push","hasOwnProp","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some$1","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","key","slice","join","stack","deprecateSimple","name","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","sort","makeGetSet","keepTime","set$1","get","stringGet","stringSet","prioritized","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","addFormatToken","token","padded","callback","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf$1","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","daysInYear","isLeapYear","getIsLeapYear","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","oldLocale","locales","globalLocale","_abbr","getSetGlobalLocale","values","data","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","x","updateLocale","listLocales","keys$1","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromRFC2822","dayFormat","timezone","timezoneIndex","timezones"," GMT"," EDT"," EST"," CDT"," CST"," MDT"," MST"," PDT"," PST","military","basicRfcRegex","momentDate","momentDay","indexOf","splice","configFromString","aspNetJsonRegex","createFromInputFallback","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","ISO_8601","RFC_2822","parsedInput","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","delta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","total","asSeconds","some","fun","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","weather","$","document","ready","ip","url","sanitizeData","tmpDate","currentWeather","forecast","object","high","low","location","getJSON","city","state","query","encodeURI","setting","then","intel","results","channel","item","condition","Model","view","View","Ctrl","show","init","./weather.js","3","WeatherModel","unitChange","Event","WeatherView","elements","_model","_elements","unitButtonClicked","_this","attach","convertUnits","WeatherCtrl","_view","convertUnit","sender","_sender","_listeners","toCelsius","num","toFahrenheit","_this2","notify","_this3","cc","html","region","displayAnimation","text","displaySymbol","button","todayWeather","highWeather","lowWeather","click","_this4","listener"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n","/**\n * The Model. Model stores items and notifies\n * observers about changes.\n */\nfunction WeatherModel(data) {\n  this.location = data.location\n  this.currentWeather = data.currentWeather\n  this.forecast = data.forecast\n  this.unit = 'F'\n\n  this.unitChange = new Event(this)\n}\n\nWeatherModel.prototype = {\n  toCelsius: function (num) {\n    return Math.round((num - 32) * 5 / 9)\n  },\n  toFahrenheit: function (num) {\n    return Math.round((num * 9 / 5) + 32)\n  },\n  convertUnit: function () {\n    if (this.unit === 'F') {\n      this.currentWeather.temp = this.toCelsius(this.currentWeather.temp)\n      this.forecast.forEach((day) => {\n        day.high = this.toCelsius(day.high)\n        day.low = this.toCelsius(day.low)\n      })\n      this.unit = 'C'\n      this.unitChange.notify()\n    } else {\n      this.currentWeather.temp = this.toFahrenheit(this.currentWeather.temp)\n      this.forecast.forEach((day) => {\n        day.high = this.toFahrenheit(day.high)\n        day.low = this.toFahrenheit(day.low)\n      })\n      this.unit = 'F'\n      this.unitChange.notify()\n    }\n  }\n}\n\n/**\n * The View. View presents the model and provides\n * the UI events. The controller is attached to these\n * events to handle the user interraction.\n */\nfunction WeatherView(model, elements) {\n  this._model = model\n  this._elements = elements\n\n  this.unitButtonClicked = new Event(this)\n\n  var _this = this\n\n  // attach model listeners\n  this._model.unitChange.attach(() => {\n    _this.convertUnits()\n  })\n}\n\nWeatherView.prototype = {\n  show: function () {\n    let location = this._elements.location,\n      cc = this._elements.currentWeather,\n      forecast = this._elements.forecast,\n      model = this._model\n\n    location.html(model.location.city + ', ' + model.location.region)\n\n    cc.html(\n      '<h3>' + model.currentWeather.date + '</h3>' +\n      '<h2><span id=\"todayWeather\">' + model.currentWeather.temp + '</span>&deg;<button id=\"button\" class=\"unit btn btn-primary\">F</button></h2>' +\n      this.displayAnimation(model.currentWeather.text) +\n      '<h3>' + model.currentWeather.text + '</h3>'\n\n    )\n\n    forecast.html((index) => {\n      return '<td>' + model.forecast[index].day + '</td>' +\n        '<td>' + model.forecast[index].date + '</td>' +\n        '<td><span class=\"hweather\">' + model.forecast[index].high + '</span>&deg;<span class=\"unit\">F</span></td>' +\n        '<td><span class=\"lweather\">' + model.forecast[index].low + '</span>&deg;<span class=\"unit\">F</span></td>' +\n        '<td>' + this.displaySymbol(model.forecast[index].text) + ' ' + model.forecast[index].text + '</td>'\n    })\n    return this\n\n  },\n  init: function () {\n    this._elements.button = $('#button')\n    this._elements.unit = $('.unit')\n    this._elements.todayWeather = $('#todayWeather')\n    this._elements.highWeather = $('.hweather')\n    this._elements.lowWeather = $('.lweather')\n\n    // attach listeners to HTML controls\n    var _this = this\n    this._elements.button.click(() => {\n      _this.unitButtonClicked.notify()\n    })\n  },\n  convertUnits: function () {\n    this._elements.unit.text(this._model.unit)\n\n    this._elements.todayWeather.text(this._model.currentWeather.temp)\n\n    this._elements.highWeather.text((index) => {\n      return this._model.forecast[index].high\n    })\n    this._elements.lowWeather.text((index) => {\n      return this._model.forecast[index].low\n    })\n  },\n  displaySymbol: function (string) {\n    if (/sunny/gi.test(string)) {\n      return '<i class=\"wi wi-day-sunny\"></i>'\n    } else if (/cloudy/gi.test(string)) {\n      return '<i class=\"wi wi-cloudy\"></i>'\n    } else if (/thunderstorm/gi.test(string)) {\n      return '<i class=\"wi wi-thunderstorm\"></i>'\n    }\n  },\n  displayAnimation: function (string) {\n    if (/sunny/gi.test(string)) {\n      return '<div class=\"icon sunny\"><div class=\"sun\"><div class=\"rays\"></div></div></div>'\n    } else if (/cloudy/gi.test(string)) {\n      return '<div class=\"icon cloudy\"><div class=\"cloud\"></div><div class=\"cloud\"></div></div>'\n    } else if (/thunderstorm/gi.test(string)) {\n      return '<div class=\"icon thunder-storm\"><div class=\"cloud\"></div><div class=\"lightning\"><div class=\"bolt\"></div><div class=\"bolt\"></div></div></div>'\n    } else if (/snow/gi.test(string)) {\n      return '<div class=\"icon flurries\"><div class=\"cloud\"></div><div class=\"snow\"><div class=\"flake\"></div><div class=\"flake\"></div></div></div>'\n    } else if (/shower/gi.test(string)){\n      return '<div class=\"icon rainy\"><div class=\"cloud\"></div><div class=\"rain\"></div></div>'\n    }\n  }\n}\n\n/**\n * The Controller. Controller responds to user actions and\n * invokes changes on the model.\n */\nfunction WeatherCtrl(model, view) {\n  this._model = model\n  this._view = view\n\n  var _this = this\n\n  this._view.unitButtonClicked.attach(() => {\n    _this.convertUnit()\n  })\n}\n\nWeatherCtrl.prototype = {\n  convertUnit: function () {\n    this._model.convertUnit()\n  }\n}\n\nfunction Event(sender) {\n  this._sender = sender\n  this._listeners = []\n}\n\nEvent.prototype = {\n  attach: function (listener) {\n    this._listeners.push(listener)\n  },\n  notify: function (args) {\n    for (let i = 0; i < this._listeners.length; i++) {\n      this._listeners[i](this._sender, args)\n    }\n  }\n}\n\nmodule.exports = {\n  Model: WeatherModel,\n  View: WeatherView,\n  Ctrl: WeatherCtrl\n}","var weather = require('./weather.js'), moment = require('moment')\n\n$(document).ready(() => {\n\n  let ip = {\n    url: 'https://api.ipify.org',\n    format: '?format=json'\n  }\n\n  // retrieve ip address\n  $.get(ip.url + ip.format, (data) => {\n    let location = {\n      url: 'https://freegeoip.net/',\n      format: 'json/',\n      ip: data.ip\n    }\n\n    // get location of ip address\n    $.getJSON(location.url + location.format + location.ip, (data) => {\n      let city = data['city'], state = data['region_code']\n      if (/the/gi.test(city)) {\n        city = city.split(' ')[1]\n      }\n\n      // get weather info from yahooapis\n      let w = {\n        url: 'https://query.yahooapis.com/v1/public/yql?q=',\n        query: encodeURI('select * from weather.forecast where woeid in (select woeid from geo.places(1) where text=\"' + city + ', ' + state + '\")'),\n        setting: '&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys'\n      }\n\n      $.getJSON(w.url + w.query + w.setting).then((data) => {\n\n        var intel = {\n          location: data.query.results.channel.location,\n          currentWeather: data.query.results.channel.item.condition,\n          forecast: data.query.results.channel.item.forecast\n        }\n\n        sanitizeData(intel)\n\n        var model = new weather.Model(intel)\n\n        var view = new weather.View(model, {\n          location: $('#location'),\n          currentWeather: $('#today'),\n          forecast: $('.day')\n        })\n\n        var controller = new weather.Ctrl(model, view)\n\n        view.show().init()\n      })\n    })\n    function sanitizeData(data) {\n      let tmpDate = moment.utc(new Date(data.currentWeather.date).toISOString())\n\n      data.currentWeather.date = tmpDate.format('ddd, MMM Do YYYY h:mm A')\n\n      data.currentWeather.temp = parseInt(data.currentWeather.temp)\n\n      data.forecast.forEach((object) => {\n        object.date = moment.utc(new Date(object.date).toISOString())\n        object.date = moment(object.date).format('DD MMM')\n        object.high = parseInt(object.high)\n        object.low = parseInt(object.low)\n      })\n    }\n  })\n})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n},{}],2:[function(require,module,exports){\nvar weather = require('./weather.js'), moment = require('moment')\n\n$(document).ready(() => {\n\n  let ip = {\n    url: 'https://api.ipify.org',\n    format: '?format=json'\n  }\n\n  // retrieve ip address\n  $.get(ip.url + ip.format, (data) => {\n    let location = {\n      url: 'https://freegeoip.net/',\n      format: 'json/',\n      ip: data.ip\n    }\n\n    // get location of ip address\n    $.getJSON(location.url + location.format + location.ip, (data) => {\n      let city = data['city'], state = data['region_code']\n      if (/the/gi.test(city)) {\n        city = city.split(' ')[1]\n      }\n\n      // get weather info from yahooapis\n      let w = {\n        url: 'https://query.yahooapis.com/v1/public/yql?q=',\n        query: encodeURI('select * from weather.forecast where woeid in (select woeid from geo.places(1) where text=\"' + city + ', ' + state + '\")'),\n        setting: '&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys'\n      }\n\n      $.getJSON(w.url + w.query + w.setting).then((data) => {\n\n        var intel = {\n          location: data.query.results.channel.location,\n          currentWeather: data.query.results.channel.item.condition,\n          forecast: data.query.results.channel.item.forecast\n        }\n\n        sanitizeData(intel)\n\n        var model = new weather.Model(intel)\n\n        var view = new weather.View(model, {\n          location: $('#location'),\n          currentWeather: $('#today'),\n          forecast: $('.day')\n        })\n\n        var controller = new weather.Ctrl(model, view)\n\n        view.show().init()\n      })\n    })\n    function sanitizeData(data) {\n      let tmpDate = moment.utc(new Date(data.currentWeather.date).toISOString())\n\n      data.currentWeather.date = tmpDate.format('ddd, MMM Do YYYY h:mm A')\n\n      data.currentWeather.temp = parseInt(data.currentWeather.temp)\n\n      data.forecast.forEach((object) => {\n        object.date = moment.utc(new Date(object.date).toISOString())\n        object.date = moment(object.date).format('DD MMM')\n        object.high = parseInt(object.high)\n        object.low = parseInt(object.low)\n      })\n    }\n  })\n})\n},{\"./weather.js\":3,\"moment\":1}],3:[function(require,module,exports){\n/**\n * The Model. Model stores items and notifies\n * observers about changes.\n */\nfunction WeatherModel(data) {\n  this.location = data.location\n  this.currentWeather = data.currentWeather\n  this.forecast = data.forecast\n  this.unit = 'F'\n\n  this.unitChange = new Event(this)\n}\n\nWeatherModel.prototype = {\n  toCelsius: function (num) {\n    return Math.round((num - 32) * 5 / 9)\n  },\n  toFahrenheit: function (num) {\n    return Math.round((num * 9 / 5) + 32)\n  },\n  convertUnit: function () {\n    if (this.unit === 'F') {\n      this.currentWeather.temp = this.toCelsius(this.currentWeather.temp)\n      this.forecast.forEach((day) => {\n        day.high = this.toCelsius(day.high)\n        day.low = this.toCelsius(day.low)\n      })\n      this.unit = 'C'\n      this.unitChange.notify()\n    } else {\n      this.currentWeather.temp = this.toFahrenheit(this.currentWeather.temp)\n      this.forecast.forEach((day) => {\n        day.high = this.toFahrenheit(day.high)\n        day.low = this.toFahrenheit(day.low)\n      })\n      this.unit = 'F'\n      this.unitChange.notify()\n    }\n  }\n}\n\n/**\n * The View. View presents the model and provides\n * the UI events. The controller is attached to these\n * events to handle the user interraction.\n */\nfunction WeatherView(model, elements) {\n  this._model = model\n  this._elements = elements\n\n  this.unitButtonClicked = new Event(this)\n\n  var _this = this\n\n  // attach model listeners\n  this._model.unitChange.attach(() => {\n    _this.convertUnits()\n  })\n}\n\nWeatherView.prototype = {\n  show: function () {\n    let location = this._elements.location,\n      cc = this._elements.currentWeather,\n      forecast = this._elements.forecast,\n      model = this._model\n\n    location.html(model.location.city + ', ' + model.location.region)\n\n    cc.html(\n      '<h3>' + model.currentWeather.date + '</h3>' +\n      '<h2><span id=\"todayWeather\">' + model.currentWeather.temp + '</span>&deg;<button id=\"button\" class=\"unit btn btn-primary\">F</button></h2>' +\n      this.displayAnimation(model.currentWeather.text) +\n      '<h3>' + model.currentWeather.text + '</h3>'\n\n    )\n\n    forecast.html((index) => {\n      return '<td>' + model.forecast[index].day + '</td>' +\n        '<td>' + model.forecast[index].date + '</td>' +\n        '<td><span class=\"hweather\">' + model.forecast[index].high + '</span>&deg;<span class=\"unit\">F</span></td>' +\n        '<td><span class=\"lweather\">' + model.forecast[index].low + '</span>&deg;<span class=\"unit\">F</span></td>' +\n        '<td>' + this.displaySymbol(model.forecast[index].text) + ' ' + model.forecast[index].text + '</td>'\n    })\n    return this\n\n  },\n  init: function () {\n    this._elements.button = $('#button')\n    this._elements.unit = $('.unit')\n    this._elements.todayWeather = $('#todayWeather')\n    this._elements.highWeather = $('.hweather')\n    this._elements.lowWeather = $('.lweather')\n\n    // attach listeners to HTML controls\n    var _this = this\n    this._elements.button.click(() => {\n      _this.unitButtonClicked.notify()\n    })\n  },\n  convertUnits: function () {\n    this._elements.unit.text(this._model.unit)\n\n    this._elements.todayWeather.text(this._model.currentWeather.temp)\n\n    this._elements.highWeather.text((index) => {\n      return this._model.forecast[index].high\n    })\n    this._elements.lowWeather.text((index) => {\n      return this._model.forecast[index].low\n    })\n  },\n  displaySymbol: function (string) {\n    if (/sunny/gi.test(string)) {\n      return '<i class=\"wi wi-day-sunny\"></i>'\n    } else if (/cloudy/gi.test(string)) {\n      return '<i class=\"wi wi-cloudy\"></i>'\n    } else if (/thunderstorm/gi.test(string)) {\n      return '<i class=\"wi wi-thunderstorm\"></i>'\n    }\n  },\n  displayAnimation: function (string) {\n    if (/sunny/gi.test(string)) {\n      return '<div class=\"icon sunny\"><div class=\"sun\"><div class=\"rays\"></div></div></div>'\n    } else if (/cloudy/gi.test(string)) {\n      return '<div class=\"icon cloudy\"><div class=\"cloud\"></div><div class=\"cloud\"></div></div>'\n    } else if (/thunderstorm/gi.test(string)) {\n      return '<div class=\"icon thunder-storm\"><div class=\"cloud\"></div><div class=\"lightning\"><div class=\"bolt\"></div><div class=\"bolt\"></div></div></div>'\n    } else if (/snow/gi.test(string)) {\n      return '<div class=\"icon flurries\"><div class=\"cloud\"></div><div class=\"snow\"><div class=\"flake\"></div><div class=\"flake\"></div></div></div>'\n    } else if (/shower/gi.test(string)){\n      return '<div class=\"icon rainy\"><div class=\"cloud\"></div><div class=\"rain\"></div></div>'\n    }\n  }\n}\n\n/**\n * The Controller. Controller responds to user actions and\n * invokes changes on the model.\n */\nfunction WeatherCtrl(model, view) {\n  this._model = model\n  this._view = view\n\n  var _this = this\n\n  this._view.unitButtonClicked.attach(() => {\n    _this.convertUnit()\n  })\n}\n\nWeatherCtrl.prototype = {\n  convertUnit: function () {\n    this._model.convertUnit()\n  }\n}\n\nfunction Event(sender) {\n  this._sender = sender\n  this._listeners = []\n}\n\nEvent.prototype = {\n  attach: function (listener) {\n    this._listeners.push(listener)\n  },\n  notify: function (args) {\n    for (let i = 0; i < this._listeners.length; i++) {\n      this._listeners[i](this._sender, args)\n    }\n  }\n}\n\nmodule.exports = {\n  Model: WeatherModel,\n  View: WeatherView,\n  Ctrl: WeatherCtrl\n}\n},{}]},{},[2])\n\n"]}